

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ASY_PERSON_JOB]') AND type IN ('P', 'PC'))
BEGIN
    EXEC('
    CREATE PROCEDURE ASY_PERSON_JOB
    AS
    BEGIN
        IF OBJECT_ID(''dbo.AKTARJOB'', ''U'') IS NULL
        BEGIN
            CREATE TABLE AKTARJOB
            (
                ID INT PRIMARY KEY IDENTITY(1,1),
		                PERSONCODE VARCHAR(16),
				JOBCODE VARCHAR(MAX),
				JOBDESC VARCHAR(MAX)
            );
        END;

        BEGIN TRANSACTION;
        BEGIN TRY
            DECLARE @ERORRMESSAGE VARCHAR(MAX), @ID INT = 1,@PERSONELLOGICALREF  INT

            WHILE (SELECT COUNT(*) FROM AKTARJOB WITH (NOLOCK)) >= @ID
            BEGIN
                DECLARE 
                    @PERSONCODE VARCHAR(16),
					@JOBCODE VARCHAR(MAX),
					@JOBDESC VARCHAR(MAX)

                SELECT TOP 1 
                    @PERSONCODE = TRIM(PERSONCODE),
                    @JOBCODE =JOBCODE,
					@JOBDESC=JOBDESC
                FROM AKTARJOB WITH (NOLOCK)
                WHERE ID = @ID;
      
                IF (  SELECT COUNT(*)
                FROM H_0015_PERSONS WITH (NOLOCK) 
                WHERE CODE = @PERSONCODE)=0
                BEGIN
                    SET @ERORRMESSAGE = CONCAT(''Personel Bulunamadı: '', @PERSONCODE);
                    RAISERROR(@ERORRMESSAGE, 16, 1);
                END;

				select TOP 1 @PERSONELLOGICALREF=LOGICALREF from H_0015_PERSONS WITH(NOLOCK) WHERE CODE=@PERSONCODE

                IF (SELECT COUNT(*) FROM H_0015_QUALFDEFS WITH (NOLOCK) WHERE (CODE =@JOBCODE OR NAME=@JOBDESC) AND TYP=15) = 0
                BEGIN
                    SET @ERORRMESSAGE = CONCAT(''Meslek kodu veya açıklaması hatalı. Kontrol ediniz: '', @PERSONCODE);
                    RAISERROR(@ERORRMESSAGE, 16, 1);
                END;
				
             
 

                UPDATE H_0015_PERSONS
                SET 
                    JOBDEFREF=(SELECT TOP 1 LOGICALREF FROM H_0015_QUALFDEFS WITH (NOLOCK) WHERE (CODE =@JOBCODE OR NAME=@JOBDESC) AND TYP=15)
                WHERE 
                    LOGICALREF = @PERSONELLOGICALREF 

                SET @ID = @ID + 1;
            END;

            COMMIT TRANSACTION;
        END TRY
        BEGIN CATCH
            ROLLBACK TRANSACTION;
            SET @ERORRMESSAGE = ERROR_MESSAGE();
            RAISERROR(@ERORRMESSAGE, 16, 1);
        END CATCH;
    END');
END;
